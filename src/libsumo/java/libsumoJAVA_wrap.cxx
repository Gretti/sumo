/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifdef _MSC_VER
// ignore constant conditional expression warnings
#pragma warning(disable:4127)
#endif



#ifndef SWIGJAVA
#define SWIGJAVA
#endif



#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13




#include <string>


#include <typeinfo>
#include <stdexcept>


#include <vector>
#include <stdexcept>

SWIGINTERN std::vector< std::string >::const_reference std_vector_Sl_std_string_Sg__get(std::vector< std::string > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_std_string_Sg__set(std::vector< std::string > *self,int i,std::vector< std::string >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }

SWIGINTERN void SWIG_JavaException(JNIEnv *jenv, int code, const char *msg) {
  SWIG_JavaExceptionCodes exception_code = SWIG_JavaUnknownError;
  switch(code) {
  case SWIG_MemoryError:
    exception_code = SWIG_JavaOutOfMemoryError;
    break;
  case SWIG_IOError:
    exception_code = SWIG_JavaIOException;
    break;
  case SWIG_SystemError:
  case SWIG_RuntimeError:
    exception_code = SWIG_JavaRuntimeException;
    break;
  case SWIG_OverflowError:
  case SWIG_IndexError:
    exception_code = SWIG_JavaIndexOutOfBoundsException;
    break;
  case SWIG_DivisionByZero:
    exception_code = SWIG_JavaArithmeticException;
    break;
  case SWIG_SyntaxError:
  case SWIG_ValueError:
  case SWIG_TypeError:
    exception_code = SWIG_JavaIllegalArgumentException;
    break;
  case SWIG_UnknownError:
  default:
    exception_code = SWIG_JavaUnknownError;
    break;
  }
  SWIG_JavaThrowException(jenv, exception_code, msg);
}


#include <typeinfo>
#include <stdexcept>


#include <libsumo/TraCIDefs.h>
#include <libsumo/Edge.h>
#include <libsumo/InductionLoop.h>
#include <libsumo/Junction.h>
#include <libsumo/LaneArea.h>
#include <libsumo/Lane.h>
#include <libsumo/MultiEntryExit.h>
#include <libsumo/POI.h>
#include <libsumo/Polygon.h>
#include <libsumo/Route.h>
#include <libsumo/Simulation.h>
#include <libsumo/TrafficLight.h>
#include <libsumo/VehicleType.h>
#include <libsumo/Vehicle.h>
#include <libsumo/Person.h>

SWIGINTERN std::vector< libsumo::TraCIPhase >::const_reference std_vector_Sl_libsumo_TraCIPhase_Sg__get(std::vector< libsumo::TraCIPhase > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCIPhase_Sg__set(std::vector< libsumo::TraCIPhase > *self,int i,std::vector< libsumo::TraCIPhase >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCIConnection >::const_reference std_vector_Sl_libsumo_TraCIConnection_Sg__get(std::vector< libsumo::TraCIConnection > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCIConnection_Sg__set(std::vector< libsumo::TraCIConnection > *self,int i,std::vector< libsumo::TraCIConnection >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCILogic >::const_reference std_vector_Sl_libsumo_TraCILogic_Sg__get(std::vector< libsumo::TraCILogic > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCILogic_Sg__set(std::vector< libsumo::TraCILogic > *self,int i,std::vector< libsumo::TraCILogic >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< libsumo::TraCIStage >::const_reference std_vector_Sl_libsumo_TraCIStage_Sg__get(std::vector< libsumo::TraCIStage > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_libsumo_TraCIStage_Sg__set(std::vector< libsumo::TraCIStage > *self,int i,std::vector< libsumo::TraCIStage >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }

#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1StringVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::vector< std::string > *)new std::vector< std::string >();
  *(std::vector< std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1StringVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< std::string >::size_type arg1 ;
  std::vector< std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< std::string >::size_type)jarg1; 
  result = (std::vector< std::string > *)new std::vector< std::string >(arg1);
  *(std::vector< std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  result = ((std::vector< std::string > const *)arg1)->size();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  result = ((std::vector< std::string > const *)arg1)->capacity();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  arg2 = (std::vector< std::string >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  result = (bool)((std::vector< std::string > const *)arg1)->empty();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::vector< std::string >::value_type arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->push_back((std::vector< std::string >::value_type const &)*arg2);
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jstring jresult = 0 ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::vector< std::string >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::string >::value_type *) &std_vector_Sl_std_string_Sg__get(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return 0;
  }
  
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_StringVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jstring jarg3) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::vector< std::string >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  arg2 = (int)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::vector< std::string >::value_type arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  try {
    std_vector_Sl_std_string_Sg__set(arg1,arg2,(std::string const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return ;
  }
  
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1StringVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< std::string > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_INVALID_1DOUBLE_1VALUE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(-1073741824);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIException(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string arg1 ;
  libsumo::TraCIException *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (libsumo::TraCIException *)new libsumo::TraCIException(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIException **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIException(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIException *arg1 = (libsumo::TraCIException *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIException **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIResult(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIResult *arg1 = (libsumo::TraCIResult *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIResult **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIResult_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIResult *arg1 = (libsumo::TraCIResult *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIResult **)&jarg1; 
  {
    try {
      result = (arg1)->getString();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIResult(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIResult *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIResult *)new libsumo::TraCIResult();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResult **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPosition **)&jarg1; 
  {
    try {
      result = (arg1)->getString();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1x_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPosition **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1x_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPosition **)&jarg1; 
  result = (double) ((arg1)->x);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1y_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPosition **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1y_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPosition **)&jarg1; 
  result = (double) ((arg1)->y);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1z_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPosition **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1z_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPosition **)&jarg1; 
  result = (double) ((arg1)->z);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPosition(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIPosition *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIPosition *)new libsumo::TraCIPosition();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIPosition(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIPosition **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIRoadPosition **)&jarg1; 
  {
    try {
      result = (arg1)->getString();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1edgeID_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIRoadPosition **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->edgeID = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1edgeID_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIRoadPosition **)&jarg1; 
  result = (std::string *) & ((arg1)->edgeID);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1pos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIRoadPosition **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->pos = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1pos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIRoadPosition **)&jarg1; 
  result = (double) ((arg1)->pos);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1laneIndex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIRoadPosition **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->laneIndex = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1laneIndex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIRoadPosition **)&jarg1; 
  result = (int) ((arg1)->laneIndex);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIRoadPosition(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIRoadPosition *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIRoadPosition *)new libsumo::TraCIRoadPosition();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIRoadPosition **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIRoadPosition(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIRoadPosition **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIColor **)&jarg1; 
  {
    try {
      result = (arg1)->getString();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1r_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  unsigned char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIColor **)&jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT jshort JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1r_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIColor **)&jarg1; 
  result = (unsigned char) ((arg1)->r);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1g_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  unsigned char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIColor **)&jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->g = arg2;
}


SWIGEXPORT jshort JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1g_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIColor **)&jarg1; 
  result = (unsigned char) ((arg1)->g);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1b_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  unsigned char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIColor **)&jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->b = arg2;
}


SWIGEXPORT jshort JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1b_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIColor **)&jarg1; 
  result = (unsigned char) ((arg1)->b);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1a_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  unsigned char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIColor **)&jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->a = arg2;
}


SWIGEXPORT jshort JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1a_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIColor **)&jarg1; 
  result = (unsigned char) ((arg1)->a);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIColor(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIColor *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIColor *)new libsumo::TraCIColor();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIColor **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIColor(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIColor **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIInt_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIInt *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIInt *)new libsumo::TraCIInt();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIInt **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIInt_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  libsumo::TraCIInt *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  {
    try {
      result = (libsumo::TraCIInt *)new libsumo::TraCIInt(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIInt **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIInt_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIInt *arg1 = (libsumo::TraCIInt *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIInt **)&jarg1; 
  {
    try {
      result = (arg1)->getString();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIInt_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCIInt *arg1 = (libsumo::TraCIInt *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIInt **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->value = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIInt_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIInt *arg1 = (libsumo::TraCIInt *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIInt **)&jarg1; 
  result = (int) ((arg1)->value);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIInt(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIInt *arg1 = (libsumo::TraCIInt *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIInt **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIDouble_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIDouble *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIDouble *)new libsumo::TraCIDouble();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIDouble **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIDouble_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jlong jresult = 0 ;
  double arg1 ;
  libsumo::TraCIDouble *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  {
    try {
      result = (libsumo::TraCIDouble *)new libsumo::TraCIDouble(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIDouble **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIDouble_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIDouble *arg1 = (libsumo::TraCIDouble *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIDouble **)&jarg1; 
  {
    try {
      result = (arg1)->getString();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIDouble_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIDouble *arg1 = (libsumo::TraCIDouble *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIDouble **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->value = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIDouble_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIDouble *arg1 = (libsumo::TraCIDouble *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIDouble **)&jarg1; 
  result = (double) ((arg1)->value);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIDouble(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIDouble *arg1 = (libsumo::TraCIDouble *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIDouble **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIString_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIString *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIString *)new libsumo::TraCIString();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIString **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIString_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string arg1 ;
  libsumo::TraCIString *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (libsumo::TraCIString *)new libsumo::TraCIString(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIString **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIString_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIString *arg1 = (libsumo::TraCIString *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIString **)&jarg1; 
  {
    try {
      result = (arg1)->getString();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIString_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIString *arg1 = (libsumo::TraCIString *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIString **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIString_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIString *arg1 = (libsumo::TraCIString *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIString **)&jarg1; 
  result = (std::string *) & ((arg1)->value);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIString(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIString *arg1 = (libsumo::TraCIString *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIString **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStringList_1getString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIStringList *arg1 = (libsumo::TraCIStringList *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStringList **)&jarg1; 
  {
    try {
      result = (arg1)->getString();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStringList_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  libsumo::TraCIStringList *arg1 = (libsumo::TraCIStringList *) 0 ;
  std::vector< std::string > *arg2 = (std::vector< std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(libsumo::TraCIStringList **)&jarg1; 
  arg2 = *(std::vector< std::string > **)&jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStringList_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCIStringList *arg1 = (libsumo::TraCIStringList *) 0 ;
  std::vector< std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStringList **)&jarg1; 
  result = (std::vector< std::string > *)& ((arg1)->value);
  *(std::vector< std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStringList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIStringList *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIStringList *)new libsumo::TraCIStringList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStringList **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIStringList(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIStringList *arg1 = (libsumo::TraCIStringList *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIStringList **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPhase_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIPhase *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPhase **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPhase_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4, jint jarg5) {
  jlong jresult = 0 ;
  double arg1 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  libsumo::TraCIPhase *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase(arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPhase **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPhase_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jdouble jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  double arg1 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIPhase *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase(arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPhase **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPhase_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jdouble jarg1, jstring jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  libsumo::TraCIPhase *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase(arg1,(std::string const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPhase **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPhase_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jdouble jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  std::string *arg2 = 0 ;
  libsumo::TraCIPhase *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase(arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPhase **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIPhase(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIPhase **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1duration_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPhase **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->duration = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1duration_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPhase **)&jarg1; 
  result = (double) ((arg1)->duration);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPhase **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->state = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPhase **)&jarg1; 
  result = (std::string *) & ((arg1)->state);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1minDur_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPhase **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->minDur = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1minDur_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPhase **)&jarg1; 
  result = (double) ((arg1)->minDur);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1maxDur_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPhase **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->maxDur = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1maxDur_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPhase **)&jarg1; 
  result = (double) ((arg1)->maxDur);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1next_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPhase **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->next = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhase_1next_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIPhase **)&jarg1; 
  result = (int) ((arg1)->next);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPhaseVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIPhase > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCIPhase > *)new std::vector< libsumo::TraCIPhase >();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIPhase > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIPhaseVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIPhase >::size_type arg1 ;
  std::vector< libsumo::TraCIPhase > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCIPhase >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCIPhase > *)new std::vector< libsumo::TraCIPhase >(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIPhase > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIPhase > *arg1 = (std::vector< libsumo::TraCIPhase > *) 0 ;
  std::vector< libsumo::TraCIPhase >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIPhase > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIPhase > const *)arg1)->size();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIPhase > *arg1 = (std::vector< libsumo::TraCIPhase > *) 0 ;
  std::vector< libsumo::TraCIPhase >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIPhase > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIPhase > const *)arg1)->capacity();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCIPhase > *arg1 = (std::vector< libsumo::TraCIPhase > *) 0 ;
  std::vector< libsumo::TraCIPhase >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIPhase > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCIPhase >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCIPhase > *arg1 = (std::vector< libsumo::TraCIPhase > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIPhase > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIPhase > const *)arg1)->empty();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCIPhase > *arg1 = (std::vector< libsumo::TraCIPhase > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIPhase > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCIPhase > *arg1 = (std::vector< libsumo::TraCIPhase > *) 0 ;
  std::vector< libsumo::TraCIPhase >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCIPhase > **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCIPhase >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIPhase >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCIPhase >::value_type const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIPhase > *arg1 = (std::vector< libsumo::TraCIPhase > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIPhase >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIPhase > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIPhase >::value_type *) &std_vector_Sl_libsumo_TraCIPhase_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIPhase >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPhaseVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCIPhase > *arg1 = (std::vector< libsumo::TraCIPhase > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIPhase >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCIPhase > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< libsumo::TraCIPhase >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIPhase >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIPhase_Sg__set(arg1,arg2,(libsumo::TraCIPhase const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIPhaseVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCIPhase > *arg1 = (std::vector< libsumo::TraCIPhase > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCIPhase > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILogic_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCILogic *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCILogic *)new libsumo::TraCILogic();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCILogic **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILogic_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  libsumo::TraCILogic *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (libsumo::TraCILogic *)new libsumo::TraCILogic((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCILogic **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCILogic(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1programID_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->programID = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1programID_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  result = (std::string *) & ((arg1)->programID);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  result = (int) ((arg1)->type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1currentPhaseIndex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->currentPhaseIndex = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1currentPhaseIndex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  result = (int) ((arg1)->currentPhaseIndex);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1phases_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::vector< libsumo::TraCIPhase > *arg2 = (std::vector< libsumo::TraCIPhase > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCIPhase > **)&jarg2; 
  if (arg1) (arg1)->phases = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1phases_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::vector< libsumo::TraCIPhase > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  result = (std::vector< libsumo::TraCIPhase > *)& ((arg1)->phases);
  *(std::vector< libsumo::TraCIPhase > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1subParameter_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::map< std::string,std::string > *arg2 = (std::map< std::string,std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  arg2 = *(std::map< std::string,std::string > **)&jarg2; 
  if (arg1) (arg1)->subParameter = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogic_1subParameter_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::map< std::string,std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILogic **)&jarg1; 
  result = (std::map< std::string,std::string > *)& ((arg1)->subParameter);
  *(std::map< std::string,std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILink(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  libsumo::TraCILink *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      result = (libsumo::TraCILink *)new libsumo::TraCILink((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCILink **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCILink(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCILink **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILink_1fromLane_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILink **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->fromLane = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILink_1fromLane_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILink **)&jarg1; 
  result = (std::string *) & ((arg1)->fromLane);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILink_1viaLane_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILink **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->viaLane = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILink_1viaLane_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILink **)&jarg1; 
  result = (std::string *) & ((arg1)->viaLane);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILink_1toLane_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILink **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->toLane = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILink_1toLane_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCILink **)&jarg1; 
  result = (std::string *) & ((arg1)->toLane);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIConnection_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIConnection *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIConnection *)new libsumo::TraCIConnection();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIConnection **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIConnection_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jboolean jarg2, jboolean jarg3, jboolean jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jdouble jarg8) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  bool arg2 ;
  bool arg3 ;
  bool arg4 ;
  std::string arg5 ;
  std::string arg6 ;
  std::string arg7 ;
  double arg8 ;
  libsumo::TraCIConnection *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = jarg2 ? true : false; 
  arg3 = jarg3 ? true : false; 
  arg4 = jarg4 ? true : false; 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return 0;
  (&arg5)->assign(arg5_pstr);
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return 0;
  (&arg6)->assign(arg6_pstr);
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return 0;
  (&arg7)->assign(arg7_pstr);
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  arg8 = (double)jarg8; 
  {
    try {
      result = (libsumo::TraCIConnection *)new libsumo::TraCIConnection((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIConnection **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIConnection(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1approachedLane_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->approachedLane = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1approachedLane_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (std::string *) & ((arg1)->approachedLane);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1hasPrio_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->hasPrio = arg2;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1hasPrio_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (bool) ((arg1)->hasPrio);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1isOpen_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->isOpen = arg2;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1isOpen_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (bool) ((arg1)->isOpen);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1hasFoe_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->hasFoe = arg2;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1hasFoe_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (bool) ((arg1)->hasFoe);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1approachedInternal_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->approachedInternal = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1approachedInternal_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (std::string *) & ((arg1)->approachedInternal);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->state = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (std::string *) & ((arg1)->state);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1direction_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->direction = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1direction_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (std::string *) & ((arg1)->direction);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnection_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIConnection **)&jarg1; 
  result = (double) ((arg1)->length);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->id = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  result = (std::string *) & ((arg1)->id);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  result = (double) ((arg1)->length);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1entryTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->entryTime = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1entryTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  result = (double) ((arg1)->entryTime);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1leaveTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->leaveTime = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1leaveTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  result = (double) ((arg1)->leaveTime);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1typeID_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->typeID = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIVehicleData_1typeID_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  result = (std::string *) & ((arg1)->typeID);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIVehicleData(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIVehicleData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIVehicleData *)new libsumo::TraCIVehicleData();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIVehicleData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIVehicleData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIVehicleData **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->id = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  result = (std::string *) & ((arg1)->id);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1tlIndex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->tlIndex = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1tlIndex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  result = (int) ((arg1)->tlIndex);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1dist_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->dist = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1dist_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  result = (double) ((arg1)->dist);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jchar jarg2) {
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  arg2 = (char)jarg2; 
  if (arg1) (arg1)->state = arg2;
}


SWIGEXPORT jchar JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextTLSData_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jchar jresult = 0 ;
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  result = (char) ((arg1)->state);
  jresult = (jchar)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextTLSData(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCINextTLSData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCINextTLSData *)new libsumo::TraCINextTLSData();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCINextTLSData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCINextTLSData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCINextTLSData **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1lane_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextStopData **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->lane = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1lane_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextStopData **)&jarg1; 
  result = (std::string *) & ((arg1)->lane);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1endPos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextStopData **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->endPos = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1endPos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextStopData **)&jarg1; 
  result = (double) ((arg1)->endPos);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1stoppingPlaceID_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextStopData **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->stoppingPlaceID = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1stoppingPlaceID_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextStopData **)&jarg1; 
  result = (std::string *) & ((arg1)->stoppingPlaceID);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1stopFlags_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextStopData **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->stopFlags = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1stopFlags_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextStopData **)&jarg1; 
  result = (int) ((arg1)->stopFlags);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1duration_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextStopData **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->duration = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1duration_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextStopData **)&jarg1; 
  result = (double) ((arg1)->duration);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1until_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextStopData **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->until = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCINextStopData_1until_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCINextStopData **)&jarg1; 
  result = (double) ((arg1)->until);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCINextStopData(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCINextStopData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCINextStopData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCINextStopData **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1laneID_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->laneID = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1laneID_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  result = (std::string *) & ((arg1)->laneID);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  result = (double) ((arg1)->length);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1occupation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->occupation = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1occupation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  result = (double) ((arg1)->occupation);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1bestLaneOffset_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->bestLaneOffset = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1bestLaneOffset_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  result = (int) ((arg1)->bestLaneOffset);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1allowsContinuation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->allowsContinuation = arg2;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1allowsContinuation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  result = (bool) ((arg1)->allowsContinuation);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1continuationLanes_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::vector< std::string > *arg2 = (std::vector< std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  arg2 = *(std::vector< std::string > **)&jarg2; 
  if (arg1) (arg1)->continuationLanes = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIBestLanesData_1continuationLanes_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::vector< std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  result = (std::vector< std::string > *)& ((arg1)->continuationLanes);
  *(std::vector< std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIBestLanesData(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIBestLanesData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIBestLanesData *)new libsumo::TraCIBestLanesData();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIBestLanesData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIBestLanesData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIBestLanesData **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStage_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  libsumo::TraCIStage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (int) ((arg1)->type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1vType_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->vType = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1vType_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (std::string *) & ((arg1)->vType);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1line_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->line = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1line_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (std::string *) & ((arg1)->line);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1destStop_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->destStop = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1destStop_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (std::string *) & ((arg1)->destStop);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1edges_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::vector< std::string > *arg2 = (std::vector< std::string > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = *(std::vector< std::string > **)&jarg2; 
  if (arg1) (arg1)->edges = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1edges_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::vector< std::string > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (std::vector< std::string > *)& ((arg1)->edges);
  *(std::vector< std::string > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1travelTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->travelTime = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1travelTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (double) ((arg1)->travelTime);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1cost_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->cost = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1cost_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (double) ((arg1)->cost);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (double) ((arg1)->length);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1intended_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->intended = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1intended_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (std::string *) & ((arg1)->intended);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1depart_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->depart = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1depart_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (double) ((arg1)->depart);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1departPos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->departPos = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1departPos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (double) ((arg1)->departPos);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1arrivalPos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->arrivalPos = arg2;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1arrivalPos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (double) ((arg1)->arrivalPos);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1description_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if (arg1) (arg1)->description = *arg2;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStage_1description_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  result = (std::string *) & ((arg1)->description);
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIStage(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TraCIStage **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIConnectionVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIConnection > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCIConnection > *)new std::vector< libsumo::TraCIConnection >();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIConnection > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIConnectionVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIConnection >::size_type arg1 ;
  std::vector< libsumo::TraCIConnection > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCIConnection >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCIConnection > *)new std::vector< libsumo::TraCIConnection >(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIConnection > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  std::vector< libsumo::TraCIConnection >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIConnection > const *)arg1)->size();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  std::vector< libsumo::TraCIConnection >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIConnection > const *)arg1)->capacity();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  std::vector< libsumo::TraCIConnection >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCIConnection >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIConnection > const *)arg1)->empty();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  std::vector< libsumo::TraCIConnection >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCIConnection >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIConnection >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCIConnection >::value_type const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIConnection >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIConnection >::value_type *) &std_vector_Sl_libsumo_TraCIConnection_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIConnection >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIConnectionVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIConnection >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< libsumo::TraCIConnection >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIConnection >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIConnection_Sg__set(arg1,arg2,(libsumo::TraCIConnection const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIConnectionVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCIConnection > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILogicVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCILogic > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCILogic > *)new std::vector< libsumo::TraCILogic >();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCILogic > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCILogicVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCILogic >::size_type arg1 ;
  std::vector< libsumo::TraCILogic > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCILogic >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCILogic > *)new std::vector< libsumo::TraCILogic >(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCILogic > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  std::vector< libsumo::TraCILogic >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCILogic > const *)arg1)->size();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  std::vector< libsumo::TraCILogic >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCILogic > const *)arg1)->capacity();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  std::vector< libsumo::TraCILogic >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCILogic >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCILogic > const *)arg1)->empty();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  std::vector< libsumo::TraCILogic >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCILogic >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCILogic >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCILogic >::value_type const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILogic >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCILogic >::value_type *) &std_vector_Sl_libsumo_TraCILogic_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCILogic >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCILogicVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILogic >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< libsumo::TraCILogic >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCILogic >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILogic_Sg__set(arg1,arg2,(libsumo::TraCILogic const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCILogicVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCILogic > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStageVector_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIStage > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (std::vector< libsumo::TraCIStage > *)new std::vector< libsumo::TraCIStage >();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_new_1TraCIStageVector_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIStage >::size_type arg1 ;
  std::vector< libsumo::TraCIStage > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< libsumo::TraCIStage >::size_type)jarg1; 
  {
    try {
      result = (std::vector< libsumo::TraCIStage > *)new std::vector< libsumo::TraCIStage >(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  std::vector< libsumo::TraCIStage >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIStage > const *)arg1)->size();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  std::vector< libsumo::TraCIStage >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIStage > const *)arg1)->capacity();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  std::vector< libsumo::TraCIStage >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  arg2 = (std::vector< libsumo::TraCIStage >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIStage > const *)arg1)->empty();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  std::vector< libsumo::TraCIStage >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  arg2 = *(std::vector< libsumo::TraCIStage >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIStage >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCIStage >::value_type const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIStage >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIStage >::value_type *) &std_vector_Sl_libsumo_TraCIStage_Sg__get(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return 0;
      }
      
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStageVector_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIStage >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< libsumo::TraCIStage >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< libsumo::TraCIStage >::value_type const & reference is null");
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIStage_Sg__set(arg1,arg2,(libsumo::TraCIStage const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
        return ;
      }
      
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TraCIStageVector(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< libsumo::TraCIStage > **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Edge::getIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Edge::getIDCount();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getAdaptedTraveltime(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      result = (double)libsumo::Edge::getAdaptedTraveltime((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getEffort(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      result = (double)libsumo::Edge::getEffort((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getTraveltime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getTraveltime((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getWaitingTime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getWaitingTime((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLastStepPersonIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Edge::getLastStepPersonIDs((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLastStepVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Edge::getLastStepVehicleIDs((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getCO2Emission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getCO2Emission((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getCOEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getCOEmission((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getHCEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getHCEmission((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getPMxEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getPMxEmission((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getNOxEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getNOxEmission((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getFuelConsumption(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getFuelConsumption((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getNoiseEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getNoiseEmission((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getElectricityConsumption(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getElectricityConsumption((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLastStepVehicleNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Edge::getLastStepVehicleNumber((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLastStepMeanSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getLastStepMeanSpeed((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLastStepOccupancy(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getLastStepOccupancy((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLastStepHaltingNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Edge::getLastStepHaltingNumber((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLastStepLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Edge::getLastStepLength((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getLaneNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Edge::getLaneNumber((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getStreetName(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Edge::getStreetName((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Edge::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setAllowedVehicleClasses(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< std::string > arg2 ;
  std::vector< std::string > *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  argp2 = *(std::vector< std::string > **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null std::vector< std::string >");
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      libsumo::Edge::setAllowedVehicleClasses((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setDisallowedVehicleClasses(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< std::string > arg2 ;
  std::vector< std::string > *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  argp2 = *(std::vector< std::string > **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null std::vector< std::string >");
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      libsumo::Edge::setDisallowedVehicleClasses((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setAllowedSVCPermissions(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Edge::setAllowedSVCPermissions((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1adaptTraveltime_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Edge::adaptTraveltime((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1adaptTraveltime_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::adaptTraveltime((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1adaptTraveltime_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Edge::adaptTraveltime((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setEffort_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Edge::setEffort((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setEffort_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::setEffort((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setEffort_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Edge::setEffort((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Edge::setMaxSpeed((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Edge::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Edge::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Edge::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Edge::subscribe((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Edge::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Edge::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Edge::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Edge::getAllSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< int,std::shared_ptr< libsumo::TraCIResult > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Edge::getSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Edge::getAllContextSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Edge::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1storeShape(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  PositionVector *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(PositionVector **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "PositionVector & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Edge::storeShape((std::string const &)*arg1,*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1makeWrapper(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::shared_ptr< libsumo::VariableWrapper > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Edge::makeWrapper();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::VariableWrapper > **)&jresult = new std::shared_ptr< libsumo::VariableWrapper >((const std::shared_ptr< libsumo::VariableWrapper > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Edge_1handleVariable(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::VariableWrapper *arg3 = (libsumo::VariableWrapper *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = *(libsumo::VariableWrapper **)&jarg3; 
  {
    try {
      result = (bool)libsumo::Edge::handleVariable((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Edge(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Edge *arg1 = (libsumo::Edge *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Edge **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::InductionLoop::getIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::InductionLoop::getIDCount();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getPosition(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::InductionLoop::getPosition((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLaneID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::InductionLoop::getLaneID((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLastStepVehicleNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::InductionLoop::getLastStepVehicleNumber((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLastStepMeanSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::InductionLoop::getLastStepMeanSpeed((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLastStepVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::InductionLoop::getLastStepVehicleIDs((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLastStepOccupancy(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::InductionLoop::getLastStepOccupancy((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getLastStepMeanLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::InductionLoop::getLastStepMeanLength((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getTimeSinceDetection(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::InductionLoop::getTimeSinceDetection((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getVehicleData(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::vector< libsumo::TraCIVehicleData > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::InductionLoop::getVehicleData((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIVehicleData > **)&jresult = new std::vector< libsumo::TraCIVehicleData >((const std::vector< libsumo::TraCIVehicleData > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::InductionLoop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::InductionLoop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::InductionLoop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::InductionLoop::subscribe((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::InductionLoop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::InductionLoop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::InductionLoop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::InductionLoop::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::InductionLoop::getAllSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< int,std::shared_ptr< libsumo::TraCIResult > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::InductionLoop::getSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::InductionLoop::getAllContextSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::InductionLoop::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1getTree(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  NamedRTree *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (NamedRTree *)libsumo::InductionLoop::getTree();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(NamedRTree **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1storeShape(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  PositionVector *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(PositionVector **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "PositionVector & reference is null");
    return ;
  } 
  {
    try {
      libsumo::InductionLoop::storeShape((std::string const &)*arg1,*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1makeWrapper(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::shared_ptr< libsumo::VariableWrapper > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::InductionLoop::makeWrapper();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::VariableWrapper > **)&jresult = new std::shared_ptr< libsumo::VariableWrapper >((const std::shared_ptr< libsumo::VariableWrapper > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_InductionLoop_1handleVariable(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::VariableWrapper *arg3 = (libsumo::VariableWrapper *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = *(libsumo::VariableWrapper **)&jarg3; 
  {
    try {
      result = (bool)libsumo::InductionLoop::handleVariable((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1InductionLoop(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::InductionLoop *arg1 = (libsumo::InductionLoop *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::InductionLoop **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Junction::getIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Junction::getIDCount();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getPosition_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  bool arg2 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = jarg2 ? true : false; 
  {
    try {
      result = libsumo::Junction::getPosition((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getPosition_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Junction::getPosition((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getShape(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::vector< libsumo::TraCIPosition > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Junction::getShape((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPositionVector **)&jresult = new libsumo::TraCIPositionVector((const libsumo::TraCIPositionVector &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Junction::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Junction::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Junction::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Junction::subscribe((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Junction::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Junction::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Junction::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Junction::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Junction::getAllSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< int,std::shared_ptr< libsumo::TraCIResult > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Junction::getSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Junction::getAllContextSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Junction::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1getTree(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  NamedRTree *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (NamedRTree *)libsumo::Junction::getTree();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(NamedRTree **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1storeShape(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  PositionVector *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(PositionVector **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "PositionVector & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Junction::storeShape((std::string const &)*arg1,*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1makeWrapper(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::shared_ptr< libsumo::VariableWrapper > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Junction::makeWrapper();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::VariableWrapper > **)&jresult = new std::shared_ptr< libsumo::VariableWrapper >((const std::shared_ptr< libsumo::VariableWrapper > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Junction_1handleVariable(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::VariableWrapper *arg3 = (libsumo::VariableWrapper *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = *(libsumo::VariableWrapper **)&jarg3; 
  {
    try {
      result = (bool)libsumo::Junction::handleVariable((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Junction(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Junction *arg1 = (libsumo::Junction *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Junction **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::LaneArea::getIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::LaneArea::getIDCount();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getJamLengthVehicle(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::LaneArea::getJamLengthVehicle((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getJamLengthMeters(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getJamLengthMeters((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLastStepMeanSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getLastStepMeanSpeed((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLastStepVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::LaneArea::getLastStepVehicleIDs((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLastStepOccupancy(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getLastStepOccupancy((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getPosition(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getPosition((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLaneID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::LaneArea::getLaneID((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::LaneArea::getLength((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLastStepVehicleNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::LaneArea::getLastStepVehicleNumber((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getLastStepHaltingNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::LaneArea::getLastStepHaltingNumber((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::LaneArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::LaneArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::LaneArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::LaneArea::subscribe((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::LaneArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::LaneArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::LaneArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::LaneArea::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::LaneArea::getAllSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< int,std::shared_ptr< libsumo::TraCIResult > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::LaneArea::getSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::LaneArea::getAllContextSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::LaneArea::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1makeWrapper(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::shared_ptr< libsumo::VariableWrapper > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::LaneArea::makeWrapper();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::VariableWrapper > **)&jresult = new std::shared_ptr< libsumo::VariableWrapper >((const std::shared_ptr< libsumo::VariableWrapper > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_LaneArea_1handleVariable(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::VariableWrapper *arg3 = (libsumo::VariableWrapper *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = *(libsumo::VariableWrapper **)&jarg3; 
  {
    try {
      result = (bool)libsumo::LaneArea::handleVariable((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1LaneArea(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::LaneArea *arg1 = (libsumo::LaneArea *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::LaneArea **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Lane::getIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Lane::getIDCount();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLinkNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Lane::getLinkNumber(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getEdgeID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string arg1 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getEdgeID(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getLength(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getMaxSpeed(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getAllowed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string arg1 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getAllowed(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getDisallowed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string arg1 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getDisallowed(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLinks(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string arg1 ;
  std::vector< libsumo::TraCIConnection > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getLinks(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIConnection > **)&jresult = new std::vector< libsumo::TraCIConnection >((const std::vector< libsumo::TraCIConnection > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getShape(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string arg1 ;
  SwigValueWrapper< std::vector< libsumo::TraCIPosition > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getShape(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPositionVector **)&jresult = new libsumo::TraCIPositionVector((const libsumo::TraCIPositionVector &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getWidth(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getWidth(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getCO2Emission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getCO2Emission(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getCOEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getCOEmission(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getHCEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getHCEmission(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getPMxEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getPMxEmission(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getNOxEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getNOxEmission(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getFuelConsumption(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getFuelConsumption(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getNoiseEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getNoiseEmission(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getElectricityConsumption(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getElectricityConsumption(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLastStepMeanSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getLastStepMeanSpeed(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLastStepOccupancy(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getLastStepOccupancy(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLastStepLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getLastStepLength(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getWaitingTime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getWaitingTime(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getTraveltime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Lane::getTraveltime(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLastStepVehicleNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Lane::getLastStepVehicleNumber(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLastStepHaltingNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Lane::getLastStepHaltingNumber(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getLastStepVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string arg1 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getLastStepVehicleIDs(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getFoes(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Lane::getFoes((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getInternalFoes(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getInternalFoes((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1setAllowed(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string arg1 ;
  std::vector< std::string > arg2 ;
  std::vector< std::string > *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  argp2 = *(std::vector< std::string > **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null std::vector< std::string >");
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      libsumo::Lane::setAllowed(arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1setDisallowed(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string arg1 ;
  std::vector< std::string > arg2 ;
  std::vector< std::string > *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  argp2 = *(std::vector< std::string > **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null std::vector< std::string >");
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      libsumo::Lane::setDisallowed(arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1setMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Lane::setMaxSpeed(arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1setLength(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Lane::setLength(arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Lane::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Lane::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Lane::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Lane::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Lane::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Lane::subscribe((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Lane::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Lane::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Lane::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Lane::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Lane::getAllSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< int,std::shared_ptr< libsumo::TraCIResult > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Lane::getAllContextSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Lane::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1storeShape(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  PositionVector *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(PositionVector **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "PositionVector & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Lane::storeShape((std::string const &)*arg1,*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1makeWrapper(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::shared_ptr< libsumo::VariableWrapper > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Lane::makeWrapper();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::VariableWrapper > **)&jresult = new std::shared_ptr< libsumo::VariableWrapper >((const std::shared_ptr< libsumo::VariableWrapper > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Lane_1handleVariable(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::VariableWrapper *arg3 = (libsumo::VariableWrapper *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = *(libsumo::VariableWrapper **)&jarg3; 
  {
    try {
      result = (bool)libsumo::Lane::handleVariable((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Lane(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Lane *arg1 = (libsumo::Lane *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Lane **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::MultiEntryExit::getIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::MultiEntryExit::getIDCount();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getLastStepVehicleNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::MultiEntryExit::getLastStepVehicleNumber((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getLastStepMeanSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::MultiEntryExit::getLastStepMeanSpeed((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getLastStepVehicleIDs(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::MultiEntryExit::getLastStepVehicleIDs((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getLastStepHaltingNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::MultiEntryExit::getLastStepHaltingNumber((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::MultiEntryExit::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MultiEntryExit::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::MultiEntryExit::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::MultiEntryExit::subscribe((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::MultiEntryExit::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::MultiEntryExit::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::MultiEntryExit::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MultiEntryExit::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::MultiEntryExit::getAllSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< int,std::shared_ptr< libsumo::TraCIResult > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::MultiEntryExit::getSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::MultiEntryExit::getAllContextSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::MultiEntryExit::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1makeWrapper(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::shared_ptr< libsumo::VariableWrapper > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::MultiEntryExit::makeWrapper();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::VariableWrapper > **)&jresult = new std::shared_ptr< libsumo::VariableWrapper >((const std::shared_ptr< libsumo::VariableWrapper > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_MultiEntryExit_1handleVariable(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::VariableWrapper *arg3 = (libsumo::VariableWrapper *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = *(libsumo::VariableWrapper **)&jarg3; 
  {
    try {
      result = (bool)libsumo::MultiEntryExit::handleVariable((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1MultiEntryExit(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::MultiEntryExit *arg1 = (libsumo::MultiEntryExit *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::MultiEntryExit **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::POI::getIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::POI::getIDCount();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getType(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::POI::getType((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getPosition_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  bool arg2 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = jarg2 ? true : false; 
  {
    try {
      result = libsumo::POI::getPosition((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getPosition_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::POI::getPosition((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getColor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIColor result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::POI::getColor((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIColor **)&jresult = new libsumo::TraCIColor((const libsumo::TraCIColor &)result); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::POI::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1setType(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::POI::setType((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1setColor(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(libsumo::TraCIColor **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::POI::setColor((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1setPosition(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::POI::setPosition((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1add_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jstring jarg5, jint jarg6) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(libsumo::TraCIColor **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return 0;
  } 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return 0;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  arg6 = (int)jarg6; 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4,(std::string const &)*arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1add_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_, jstring jarg5) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  std::string *arg5 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(libsumo::TraCIColor **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return 0;
  } 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return 0;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4,(std::string const &)*arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1add_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(libsumo::TraCIColor **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1remove_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      result = (bool)libsumo::POI::remove((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1remove_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (bool)libsumo::POI::remove((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::POI::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::POI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::POI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::POI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::POI::subscribe((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::POI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::POI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::POI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::POI::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::POI::getAllSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< int,std::shared_ptr< libsumo::TraCIResult > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::POI::getSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::POI::getAllContextSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::POI::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1getTree(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  NamedRTree *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (NamedRTree *)libsumo::POI::getTree();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(NamedRTree **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1storeShape(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  PositionVector *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(PositionVector **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "PositionVector & reference is null");
    return ;
  } 
  {
    try {
      libsumo::POI::storeShape((std::string const &)*arg1,*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1makeWrapper(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::shared_ptr< libsumo::VariableWrapper > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::POI::makeWrapper();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::VariableWrapper > **)&jresult = new std::shared_ptr< libsumo::VariableWrapper >((const std::shared_ptr< libsumo::VariableWrapper > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_POI_1handleVariable(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::VariableWrapper *arg3 = (libsumo::VariableWrapper *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = *(libsumo::VariableWrapper **)&jarg3; 
  {
    try {
      result = (bool)libsumo::POI::handleVariable((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1POI(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::POI *arg1 = (libsumo::POI *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::POI **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Polygon::getIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Polygon::getIDCount();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getType(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Polygon::getType((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getShape(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::vector< libsumo::TraCIPosition > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Polygon::getShape((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPositionVector **)&jresult = new libsumo::TraCIPositionVector((const libsumo::TraCIPositionVector &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getColor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIColor result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Polygon::getColor((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIColor **)&jresult = new libsumo::TraCIColor((const libsumo::TraCIColor &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getFilled(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (bool)libsumo::Polygon::getFilled((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getLineWidth(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Polygon::getLineWidth((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Polygon::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1setType(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Polygon::setType((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1setShape(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(libsumo::TraCIPositionVector **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIPositionVector const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Polygon::setShape((std::string const &)*arg1,(std::vector< libsumo::TraCIPosition > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1setColor(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(libsumo::TraCIColor **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Polygon::setColor((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1add_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jboolean jarg4, jdouble jarg5, jstring jarg6, jint jarg7) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  libsumo::TraCIColor *arg3 = 0 ;
  bool arg4 ;
  double arg5 ;
  std::string *arg6 = 0 ;
  int arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(libsumo::TraCIPositionVector **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIPositionVector const & reference is null");
    return ;
  } 
  arg3 = *(libsumo::TraCIColor **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg4 = jarg4 ? true : false; 
  arg5 = (double)jarg5; 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  arg7 = (int)jarg7; 
  {
    try {
      libsumo::Polygon::add((std::string const &)*arg1,(std::vector< libsumo::TraCIPosition > const &)*arg2,(libsumo::TraCIColor const &)*arg3,arg4,arg5,(std::string const &)*arg6,arg7);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1add_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jboolean jarg4, jdouble jarg5, jstring jarg6) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  libsumo::TraCIColor *arg3 = 0 ;
  bool arg4 ;
  double arg5 ;
  std::string *arg6 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(libsumo::TraCIPositionVector **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIPositionVector const & reference is null");
    return ;
  } 
  arg3 = *(libsumo::TraCIColor **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg4 = jarg4 ? true : false; 
  arg5 = (double)jarg5; 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  {
    try {
      libsumo::Polygon::add((std::string const &)*arg1,(std::vector< libsumo::TraCIPosition > const &)*arg2,(libsumo::TraCIColor const &)*arg3,arg4,arg5,(std::string const &)*arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1add_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jboolean jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  libsumo::TraCIColor *arg3 = 0 ;
  bool arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(libsumo::TraCIPositionVector **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIPositionVector const & reference is null");
    return ;
  } 
  arg3 = *(libsumo::TraCIColor **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg4 = jarg4 ? true : false; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Polygon::add((std::string const &)*arg1,(std::vector< libsumo::TraCIPosition > const &)*arg2,(libsumo::TraCIColor const &)*arg3,arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1add_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jboolean jarg4) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  libsumo::TraCIColor *arg3 = 0 ;
  bool arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(libsumo::TraCIPositionVector **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIPositionVector const & reference is null");
    return ;
  } 
  arg3 = *(libsumo::TraCIColor **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  arg4 = jarg4 ? true : false; 
  {
    try {
      libsumo::Polygon::add((std::string const &)*arg1,(std::vector< libsumo::TraCIPosition > const &)*arg2,(libsumo::TraCIColor const &)*arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1add_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  libsumo::TraCIColor *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(libsumo::TraCIPositionVector **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIPositionVector const & reference is null");
    return ;
  } 
  arg3 = *(libsumo::TraCIColor **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Polygon::add((std::string const &)*arg1,(std::vector< libsumo::TraCIPosition > const &)*arg2,(libsumo::TraCIColor const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1remove_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Polygon::remove((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1remove_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Polygon::remove((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1setFilled(JNIEnv *jenv, jclass jcls, jstring jarg1, jboolean jarg2) {
  std::string arg1 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = jarg2 ? true : false; 
  {
    try {
      libsumo::Polygon::setFilled(arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1setLineWidth(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Polygon::setLineWidth(arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Polygon::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Polygon::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Polygon::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Polygon::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Polygon::subscribe((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Polygon::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Polygon::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Polygon::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Polygon::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Polygon::getAllSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< int,std::shared_ptr< libsumo::TraCIResult > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Polygon::getSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Polygon::getAllContextSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Polygon::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1getTree(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  NamedRTree *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (NamedRTree *)libsumo::Polygon::getTree();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(NamedRTree **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1storeShape(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  PositionVector *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(PositionVector **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "PositionVector & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Polygon::storeShape((std::string const &)*arg1,*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1makeWrapper(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::shared_ptr< libsumo::VariableWrapper > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Polygon::makeWrapper();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::VariableWrapper > **)&jresult = new std::shared_ptr< libsumo::VariableWrapper >((const std::shared_ptr< libsumo::VariableWrapper > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Polygon_1handleVariable(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::VariableWrapper *arg3 = (libsumo::VariableWrapper *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = *(libsumo::VariableWrapper **)&jarg3; 
  {
    try {
      result = (bool)libsumo::Polygon::handleVariable((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Polygon(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Polygon *arg1 = (libsumo::Polygon *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Polygon **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Route::getIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Route::getIDCount();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getEdges(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Route::getEdges((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Route::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1add(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Route::add((std::string const &)*arg1,(std::vector< std::string > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Route::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Route::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Route::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Route::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Route::subscribe((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Route::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Route::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Route::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Route::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Route::getAllSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< int,std::shared_ptr< libsumo::TraCIResult > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Route::getSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Route::getAllContextSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Route::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1makeWrapper(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::shared_ptr< libsumo::VariableWrapper > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Route::makeWrapper();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::VariableWrapper > **)&jresult = new std::shared_ptr< libsumo::VariableWrapper >((const std::shared_ptr< libsumo::VariableWrapper > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Route_1handleVariable(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::VariableWrapper *arg3 = (libsumo::VariableWrapper *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = *(libsumo::VariableWrapper **)&jarg3; 
  {
    try {
      result = (bool)libsumo::Route::handleVariable((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Route(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Route *arg1 = (libsumo::Route *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Route **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1load(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< std::string > *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< std::string > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Simulation::load((std::vector< std::string > const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1isLoaded(JNIEnv *jenv, jclass jcls) {
  jboolean jresult = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (bool)libsumo::Simulation::isLoaded();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1close(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      libsumo::Simulation::close();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1step_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  double arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Simulation::step(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1step_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      libsumo::Simulation::step();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getCurrentTime(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getCurrentTime();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getTime(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (double)libsumo::Simulation::getTime();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getLoadedNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getLoadedNumber();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getLoadedIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getLoadedIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDepartedNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getDepartedNumber();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDepartedIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getDepartedIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getArrivedNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getArrivedNumber();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getArrivedIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getArrivedIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getParkingStartingVehiclesNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getParkingStartingVehiclesNumber();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getParkingStartingVehiclesIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getParkingStartingVehiclesIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getParkingEndingVehiclesNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getParkingEndingVehiclesNumber();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getParkingEndingVehiclesIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getParkingEndingVehiclesIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getStopStartingVehiclesNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getStopStartingVehiclesNumber();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getStopStartingVehiclesIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getStopStartingVehiclesIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getStopEndingVehiclesNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getStopEndingVehiclesNumber();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getStopEndingVehiclesIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getStopEndingVehiclesIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getCollidingVehiclesNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getCollidingVehiclesNumber();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getCollidingVehiclesIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getCollidingVehiclesIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getEmergencyStoppingVehiclesNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getEmergencyStoppingVehiclesNumber();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getEmergencyStoppingVehiclesIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getEmergencyStoppingVehiclesIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getStartingTeleportNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getStartingTeleportNumber();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getStartingTeleportIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getStartingTeleportIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getEndingTeleportNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getEndingTeleportNumber();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getEndingTeleportIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getEndingTeleportIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getBusStopWaiting(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Simulation::getBusStopWaiting((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDeltaT(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (double)libsumo::Simulation::getDeltaT();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getNetBoundary(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::vector< libsumo::TraCIPosition > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getNetBoundary();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPositionVector **)&jresult = new libsumo::TraCIPositionVector((const libsumo::TraCIPositionVector &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convert2D_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jint jarg3, jboolean jarg4) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  int arg3 ;
  bool arg4 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = jarg4 ? true : false; 
  {
    try {
      result = libsumo::Simulation::convert2D((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convert2D_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jint jarg3) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  int arg3 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = libsumo::Simulation::convert2D((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convert2D_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Simulation::convert2D((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convert3D_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jint jarg3, jboolean jarg4) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  int arg3 ;
  bool arg4 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = jarg4 ? true : false; 
  {
    try {
      result = libsumo::Simulation::convert3D((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convert3D_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jint jarg3) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  int arg3 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = libsumo::Simulation::convert3D((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convert3D_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Simulation::convert3D((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convertRoad_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jboolean jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  bool arg3 ;
  libsumo::TraCIRoadPosition result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      result = libsumo::Simulation::convertRoad(arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIRoadPosition **)&jresult = new libsumo::TraCIRoadPosition((const libsumo::TraCIRoadPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convertRoad_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  libsumo::TraCIRoadPosition result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Simulation::convertRoad(arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIRoadPosition **)&jresult = new libsumo::TraCIRoadPosition((const libsumo::TraCIRoadPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convertGeo_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jboolean jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  bool arg3 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      result = libsumo::Simulation::convertGeo(arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1convertGeo_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Simulation::convertGeo(arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDistance2D_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jboolean jarg5, jboolean jarg6) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  bool arg5 ;
  bool arg6 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  arg6 = jarg6 ? true : false; 
  {
    try {
      result = (double)libsumo::Simulation::getDistance2D(arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDistance2D_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jboolean jarg5) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  bool arg5 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  {
    try {
      result = (double)libsumo::Simulation::getDistance2D(arg1,arg2,arg3,arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDistance2D_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      result = (double)libsumo::Simulation::getDistance2D(arg1,arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDistanceRoad_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jstring jarg3, jdouble jarg4, jboolean jarg5) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  bool arg5 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  {
    try {
      result = (double)libsumo::Simulation::getDistanceRoad((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getDistanceRoad_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jstring jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  {
    try {
      result = (double)libsumo::Simulation::getDistanceRoad((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getMinExpectedNumber(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Simulation::getMinExpectedNumber();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findRoute_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  libsumo::TraCIStage result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      result = libsumo::Simulation::findRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = new libsumo::TraCIStage((const libsumo::TraCIStage &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findRoute_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  libsumo::TraCIStage result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  {
    try {
      result = libsumo::Simulation::findRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = new libsumo::TraCIStage((const libsumo::TraCIStage &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findRoute_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  libsumo::TraCIStage result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      result = libsumo::Simulation::findRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = new libsumo::TraCIStage((const libsumo::TraCIStage &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findRoute_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  libsumo::TraCIStage result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Simulation::findRoute((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIStage **)&jresult = new libsumo::TraCIStage((const libsumo::TraCIStage &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10, jstring jarg11, jstring jarg12, jstring jarg13) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return 0;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return 0;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  if(!jarg13) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg13_pstr = (const char *)jenv->GetStringUTFChars(jarg13, 0); 
  if (!arg13_pstr) return 0;
  std::string arg13_str(arg13_pstr);
  arg13 = &arg13_str;
  jenv->ReleaseStringUTFChars(jarg13, arg13_pstr); 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10, jstring jarg11, jstring jarg12) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return 0;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return 0;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10, jstring jarg11) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return 0;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9, jdouble jarg10) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8, jdouble jarg9) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jdouble jarg7, jdouble jarg8) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6, jdouble jarg7) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_17(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5, jdouble jarg6) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_18(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4, jint jarg5) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_19(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  arg4 = (double)jarg4; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_110(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1findIntermodalRoute_1_1SWIG_111(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< libsumo::TraCIStage > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIStage > **)&jresult = new std::vector< libsumo::TraCIStage >((const std::vector< libsumo::TraCIStage > &)result); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Simulation::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1clearPending_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Simulation::clearPending((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1clearPending_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      libsumo::Simulation::clearPending();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1saveState(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Simulation::saveState((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Simulation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Simulation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Simulation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Simulation::subscribe((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Simulation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Simulation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Simulation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Simulation::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getAllSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getSubscriptionResults_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< int,std::shared_ptr< libsumo::TraCIResult > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Simulation::getSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getAllContextSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Simulation::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2, jdouble jarg3) {
  std::vector< int > *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< int > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Simulation::subscribe((std::vector< int > const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
  std::vector< int > *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< int > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Simulation::subscribe((std::vector< int > const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< int > *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< int > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Simulation::subscribe((std::vector< int > const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1subscribe_1_1SWIG_17(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      libsumo::Simulation::subscribe();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1getSubscriptionResults_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< int,std::shared_ptr< libsumo::TraCIResult > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::getSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1makeWrapper(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::shared_ptr< libsumo::VariableWrapper > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Simulation::makeWrapper();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::VariableWrapper > **)&jresult = new std::shared_ptr< libsumo::VariableWrapper >((const std::shared_ptr< libsumo::VariableWrapper > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Simulation_1handleVariable(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::VariableWrapper *arg3 = (libsumo::VariableWrapper *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = *(libsumo::VariableWrapper **)&jarg3; 
  {
    try {
      result = (bool)libsumo::Simulation::handleVariable((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Simulation(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Simulation *arg1 = (libsumo::Simulation *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Simulation **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::TrafficLight::getIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::TrafficLight::getIDCount();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getRedYellowGreenState(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getRedYellowGreenState((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getCompleteRedYellowGreenDefinition(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCILogic > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getCompleteRedYellowGreenDefinition((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCILogic > **)&jresult = new std::vector< libsumo::TraCILogic >((const std::vector< libsumo::TraCILogic > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getControlledJunctions(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getControlledJunctions((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getControlledLanes(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getControlledLanes((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getControlledLinks(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::vector< std::vector< libsumo::TraCILink > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getControlledLinks((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::vector< libsumo::TraCILink > > **)&jresult = new std::vector< std::vector< libsumo::TraCILink > >((const std::vector< std::vector< libsumo::TraCILink > > &)result); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getProgram(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getProgram((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getPhase(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::TrafficLight::getPhase((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getPhaseDuration(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::TrafficLight::getPhaseDuration((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getNextSwitch(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::TrafficLight::getNextSwitch((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setRedYellowGreenState(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::TrafficLight::setRedYellowGreenState((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setPhase(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::TrafficLight::setPhase((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setProgram(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::TrafficLight::setProgram((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setPhaseDuration(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::TrafficLight::setPhaseDuration((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setCompleteRedYellowGreenDefinition(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCILogic *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(libsumo::TraCILogic **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCILogic const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::setCompleteRedYellowGreenDefinition((std::string const &)*arg1,(libsumo::TraCILogic const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::TrafficLight::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::TrafficLight::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::TrafficLight::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::TrafficLight::subscribe((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::TrafficLight::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::TrafficLight::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::TrafficLight::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::TrafficLight::getAllSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< int,std::shared_ptr< libsumo::TraCIResult > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::TrafficLight::getAllContextSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::TrafficLight::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1makeWrapper(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::shared_ptr< libsumo::VariableWrapper > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::TrafficLight::makeWrapper();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::VariableWrapper > **)&jresult = new std::shared_ptr< libsumo::VariableWrapper >((const std::shared_ptr< libsumo::VariableWrapper > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TrafficLight_1handleVariable(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::VariableWrapper *arg3 = (libsumo::VariableWrapper *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = *(libsumo::VariableWrapper **)&jarg3; 
  {
    try {
      result = (bool)libsumo::TrafficLight::handleVariable((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1TrafficLight(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::TrafficLight *arg1 = (libsumo::TrafficLight *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::TrafficLight **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::VehicleType::getIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::VehicleType::getIDCount();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getLength((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getMaxSpeed((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getActionStepLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getActionStepLength((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getSpeedFactor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getSpeedFactor((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getSpeedDeviation(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getSpeedDeviation((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getAccel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getAccel((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getDecel((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getEmergencyDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getEmergencyDecel((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getApparentDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getApparentDecel((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getImperfection(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getImperfection((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getTau(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getTau((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getVehicleClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VehicleType::getVehicleClass((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getEmissionClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VehicleType::getEmissionClass((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getShapeClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VehicleType::getShapeClass((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getMinGap(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getMinGap((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getWidth(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getWidth((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getHeight(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getHeight((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getColor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIColor result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VehicleType::getColor((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIColor **)&jresult = new libsumo::TraCIColor((const libsumo::TraCIColor &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getMinGapLat(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getMinGapLat((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getMaxSpeedLat(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::VehicleType::getMaxSpeedLat((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getLateralAlignment(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VehicleType::getLateralAlignment((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::VehicleType::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setLength(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setLength((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setMaxSpeed((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setVehicleClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::VehicleType::setVehicleClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setSpeedFactor(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setSpeedFactor((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setEmissionClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::VehicleType::setEmissionClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setShapeClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::VehicleType::setShapeClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setWidth(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setWidth((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setHeight(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setHeight((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setMinGap(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setMinGap((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setAccel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setAccel((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setDecel((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setEmergencyDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setEmergencyDecel((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setApparentDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setApparentDecel((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setImperfection(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setImperfection((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setTau(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setTau((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setColor(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(libsumo::TraCIColor **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::VehicleType::setColor((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setMinGapLat(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setMinGapLat((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setMaxSpeedLat(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setMaxSpeedLat((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setLateralAlignment(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::VehicleType::setLateralAlignment((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setActionStepLength(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jboolean jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  bool arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      libsumo::VehicleType::setActionStepLength((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1copy(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::VehicleType::copy((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getVType(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string arg1 ;
  MSVehicleType *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  (&arg1)->assign(arg1_pstr);
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (MSVehicleType *)libsumo::VehicleType::getVType(arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(MSVehicleType **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setSpeedDeviation(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setSpeedDeviation((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::VehicleType::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::VehicleType::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VehicleType::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::VehicleType::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::VehicleType::subscribe((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::VehicleType::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::VehicleType::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::VehicleType::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VehicleType::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::VehicleType::getAllSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< int,std::shared_ptr< libsumo::TraCIResult > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VehicleType::getSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::VehicleType::getAllContextSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::VehicleType::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1makeWrapper(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::shared_ptr< libsumo::VariableWrapper > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::VehicleType::makeWrapper();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::VariableWrapper > **)&jresult = new std::shared_ptr< libsumo::VariableWrapper >((const std::shared_ptr< libsumo::VariableWrapper > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_VehicleType_1handleVariable(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::VariableWrapper *arg3 = (libsumo::VariableWrapper *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = *(libsumo::VariableWrapper **)&jarg3; 
  {
    try {
      result = (bool)libsumo::VehicleType::handleVariable((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1VehicleType(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::VehicleType *arg1 = (libsumo::VehicleType *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::VehicleType **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Vehicle::getIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Vehicle::getIDCount();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getSpeed((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAcceleration(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getAcceleration((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSpeedWithoutTraCI(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getSpeedWithoutTraCI((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getPosition_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  bool arg2 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = jarg2 ? true : false; 
  {
    try {
      result = libsumo::Vehicle::getPosition((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getPosition_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getPosition((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getPosition3D(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getPosition3D((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAngle(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getAngle((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSlope(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getSlope((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getRoadID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getRoadID((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLaneID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getLaneID((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLaneIndex(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getLaneIndex((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getTypeID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getTypeID((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getRouteID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getRouteID((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getRouteIndex(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getRouteIndex((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLanePosition(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getLanePosition((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLateralLanePosition(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getLateralLanePosition((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getCO2Emission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getCO2Emission((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getCOEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getCOEmission((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getHCEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getHCEmission((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getPMxEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getPMxEmission((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getNOxEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getNOxEmission((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getFuelConsumption(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getFuelConsumption((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getNoiseEmission(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getNoiseEmission((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getElectricityConsumption(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getElectricityConsumption((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getPersonNumber(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getPersonNumber((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getPersonIDList(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getPersonIDList((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLeader_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::pair< std::string,double > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Vehicle::getLeader((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,double > **)&jresult = new std::pair< std::string,double >((const std::pair< std::string,double > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLeader_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::pair< std::string,double > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getLeader((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< std::string,double > **)&jresult = new std::pair< std::string,double >((const std::pair< std::string,double > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getWaitingTime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getWaitingTime((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAccumulatedWaitingTime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getAccumulatedWaitingTime((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAdaptedTraveltime(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jstring jarg3) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getAdaptedTraveltime((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getEffort(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jstring jarg3) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getEffort((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1isRouteValid(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (bool)libsumo::Vehicle::isRouteValid((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getRoute(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getRoute((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSignals(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getSignals((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getBestLanes(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::vector< libsumo::TraCIBestLanesData > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getBestLanes((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCIBestLanesData > **)&jresult = new std::vector< libsumo::TraCIBestLanesData >((const std::vector< libsumo::TraCIBestLanesData > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getNextTLS(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::vector< libsumo::TraCINextTLSData > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getNextTLS((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCINextTLSData > **)&jresult = new std::vector< libsumo::TraCINextTLSData >((const std::vector< libsumo::TraCINextTLSData > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getNextStops(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::vector< libsumo::TraCINextStopData > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getNextStops((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< libsumo::TraCINextStopData > **)&jresult = new std::vector< libsumo::TraCINextStopData >((const std::vector< libsumo::TraCINextStopData > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getStopState(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getStopState((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getDistance(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getDistance((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getDrivingDistance_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jint jarg4) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (double)libsumo::Vehicle::getDrivingDistance((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getDrivingDistance_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      result = (double)libsumo::Vehicle::getDrivingDistance((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getDrivingDistance2D(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (double)libsumo::Vehicle::getDrivingDistance2D((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAllowedSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getAllowedSpeed((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSpeedMode(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getSpeedMode((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLaneChangeMode(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getLaneChangeMode((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getRoutingMode(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Vehicle::getRoutingMode((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLine(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getLine((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getVia(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getVia((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLaneChangeState(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::pair< int,int > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Vehicle::getLaneChangeState((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::pair< int,int > **)&jresult = new std::pair< int,int >((const std::pair< int,int > &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLastActionTime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getLastActionTime((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Vehicle::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getVehicleType(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  MSVehicleType *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (MSVehicleType *) &libsumo::Vehicle::getVehicleType((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(MSVehicleType **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getLength((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getMaxSpeed((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getActionStepLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getActionStepLength((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSpeedFactor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getSpeedFactor((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSpeedDeviation(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getSpeedDeviation((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAccel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getAccel((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getDecel((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getEmergencyDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getEmergencyDecel((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getApparentDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getApparentDecel((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getImperfection(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getImperfection((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getTau(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getTau((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getVehicleClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getVehicleClass((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getEmissionClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getEmissionClass((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getShapeClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getShapeClass((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getMinGap(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getMinGap((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getWidth(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getWidth((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getHeight(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getHeight((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getColor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIColor result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getColor((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIColor **)&jresult = new libsumo::TraCIColor((const libsumo::TraCIColor &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getMinGapLat(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getMinGapLat((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getMaxSpeedLat(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Vehicle::getMaxSpeedLat((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getLateralAlignment(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getLateralAlignment((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setStop_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jint jarg4, jdouble jarg5, jint jarg6, jdouble jarg7, jdouble jarg8) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  int arg6 ;
  double arg7 ;
  double arg8 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setStop_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jint jarg4, jdouble jarg5, jint jarg6, jdouble jarg7) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  int arg6 ;
  double arg7 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (double)jarg7; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setStop_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jint jarg4, jdouble jarg5, jint jarg6) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setStop_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jint jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setStop_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jint jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setStop_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setStop_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1rerouteParkingArea(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::rerouteParkingArea((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1resume(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::resume((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9, jstring jarg10, jstring jarg11, jstring jarg12, jstring jarg13, jint jarg14, jint jarg15) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  int arg14 ;
  int arg15 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  if(!jarg10) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg10_pstr = (const char *)jenv->GetStringUTFChars(jarg10, 0); 
  if (!arg10_pstr) return ;
  std::string arg10_str(arg10_pstr);
  arg10 = &arg10_str;
  jenv->ReleaseStringUTFChars(jarg10, arg10_pstr); 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return ;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return ;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  if(!jarg13) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg13_pstr = (const char *)jenv->GetStringUTFChars(jarg13, 0); 
  if (!arg13_pstr) return ;
  std::string arg13_str(arg13_pstr);
  arg13 = &arg13_str;
  jenv->ReleaseStringUTFChars(jarg13, arg13_pstr); 
  arg14 = (int)jarg14; 
  arg15 = (int)jarg15; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13,arg14,arg15);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9, jstring jarg10, jstring jarg11, jstring jarg12, jstring jarg13, jint jarg14) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  int arg14 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  if(!jarg10) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg10_pstr = (const char *)jenv->GetStringUTFChars(jarg10, 0); 
  if (!arg10_pstr) return ;
  std::string arg10_str(arg10_pstr);
  arg10 = &arg10_str;
  jenv->ReleaseStringUTFChars(jarg10, arg10_pstr); 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return ;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return ;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  if(!jarg13) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg13_pstr = (const char *)jenv->GetStringUTFChars(jarg13, 0); 
  if (!arg13_pstr) return ;
  std::string arg13_str(arg13_pstr);
  arg13 = &arg13_str;
  jenv->ReleaseStringUTFChars(jarg13, arg13_pstr); 
  arg14 = (int)jarg14; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13,arg14);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9, jstring jarg10, jstring jarg11, jstring jarg12, jstring jarg13) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  if(!jarg10) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg10_pstr = (const char *)jenv->GetStringUTFChars(jarg10, 0); 
  if (!arg10_pstr) return ;
  std::string arg10_str(arg10_pstr);
  arg10 = &arg10_str;
  jenv->ReleaseStringUTFChars(jarg10, arg10_pstr); 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return ;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return ;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  if(!jarg13) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg13_pstr = (const char *)jenv->GetStringUTFChars(jarg13, 0); 
  if (!arg13_pstr) return ;
  std::string arg13_str(arg13_pstr);
  arg13 = &arg13_str;
  jenv->ReleaseStringUTFChars(jarg13, arg13_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9, jstring jarg10, jstring jarg11, jstring jarg12) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  if(!jarg10) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg10_pstr = (const char *)jenv->GetStringUTFChars(jarg10, 0); 
  if (!arg10_pstr) return ;
  std::string arg10_str(arg10_pstr);
  arg10 = &arg10_str;
  jenv->ReleaseStringUTFChars(jarg10, arg10_pstr); 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return ;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  if(!jarg12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg12_pstr = (const char *)jenv->GetStringUTFChars(jarg12, 0); 
  if (!arg12_pstr) return ;
  std::string arg12_str(arg12_pstr);
  arg12 = &arg12_str;
  jenv->ReleaseStringUTFChars(jarg12, arg12_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11,(std::string const &)*arg12);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9, jstring jarg10, jstring jarg11) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  if(!jarg10) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg10_pstr = (const char *)jenv->GetStringUTFChars(jarg10, 0); 
  if (!arg10_pstr) return ;
  std::string arg10_str(arg10_pstr);
  arg10 = &arg10_str;
  jenv->ReleaseStringUTFChars(jarg10, arg10_pstr); 
  if(!jarg11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg11_pstr = (const char *)jenv->GetStringUTFChars(jarg11, 0); 
  if (!arg11_pstr) return ;
  std::string arg11_str(arg11_pstr);
  arg11 = &arg11_str;
  jenv->ReleaseStringUTFChars(jarg11, arg11_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9, jstring jarg10) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  if(!jarg10) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg10_pstr = (const char *)jenv->GetStringUTFChars(jarg10, 0); 
  if (!arg10_pstr) return ;
  std::string arg10_str(arg10_pstr);
  arg10 = &arg10_str;
  jenv->ReleaseStringUTFChars(jarg10, arg10_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8, jstring jarg9) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  if(!jarg9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg9_pstr = (const char *)jenv->GetStringUTFChars(jarg9, 0); 
  if (!arg9_pstr) return ;
  std::string arg9_str(arg9_pstr);
  arg9 = &arg9_str;
  jenv->ReleaseStringUTFChars(jarg9, arg9_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_17(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7, jstring jarg8) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  if(!jarg8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg8_pstr = (const char *)jenv->GetStringUTFChars(jarg8, 0); 
  if (!arg8_pstr) return ;
  std::string arg8_str(arg8_pstr);
  arg8 = &arg8_str;
  jenv->ReleaseStringUTFChars(jarg8, arg8_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_18(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6, jstring jarg7) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  if(!jarg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg7_pstr = (const char *)jenv->GetStringUTFChars(jarg7, 0); 
  if (!arg7_pstr) return ;
  std::string arg7_str(arg7_pstr);
  arg7 = &arg7_str;
  jenv->ReleaseStringUTFChars(jarg7, arg7_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_19(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5, jstring jarg6) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_110(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4, jstring jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  std::string arg5_str(arg5_pstr);
  arg5 = &arg5_str;
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_111(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_112(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1add_1_1SWIG_113(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1changeTarget(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::changeTarget((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1changeLane(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::changeLane((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1changeLaneRelative(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::changeLaneRelative((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1changeSublane(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::changeSublane((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1slowDown(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::slowDown((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1openGap(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Vehicle::openGap((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1deactivateGapControl(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::deactivateGapControl((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setSpeed((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setSpeedMode(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Vehicle::setSpeedMode((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setLaneChangeMode(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Vehicle::setLaneChangeMode((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setRoutingMode(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Vehicle::setRoutingMode((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setType(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setType((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setRouteID(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setRouteID((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setRoute(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::setRoute((std::string const &)*arg1,(std::vector< std::string > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1updateBestLanes(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::updateBestLanes((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setAdaptedTraveltime_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::setAdaptedTraveltime((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setAdaptedTraveltime_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::setAdaptedTraveltime((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setAdaptedTraveltime_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::setAdaptedTraveltime((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setAdaptedTraveltime_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setAdaptedTraveltime((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setEffort_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::setEffort((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setEffort_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::setEffort((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setEffort_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::setEffort((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setEffort_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setEffort((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1rerouteTraveltime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::rerouteTraveltime((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1rerouteEffort(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::rerouteEffort((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setSignals(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Vehicle::setSignals((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1moveTo(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::moveTo((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1moveToXY_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jint jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6, jint jarg7) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  int arg7 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  {
    try {
      libsumo::Vehicle::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1moveToXY_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jint jarg3, jdouble jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Vehicle::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1moveToXY_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jint jarg3, jdouble jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1remove_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jchar jarg2) {
  std::string *arg1 = 0 ;
  char arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (char)jarg2; 
  {
    try {
      libsumo::Vehicle::remove((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1remove_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::remove((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setLine(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setLine((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setVia(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::setVia((std::string const &)*arg1,(std::vector< std::string > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Vehicle::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setLength(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setLength((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setMaxSpeed((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setVehicleClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setVehicleClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setSpeedFactor(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setSpeedFactor((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setEmissionClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setEmissionClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setShapeClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setShapeClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setWidth(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setWidth((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setHeight(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setHeight((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setMinGap(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setMinGap((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setAccel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setAccel((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setDecel((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setEmergencyDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setEmergencyDecel((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setApparentDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setApparentDecel((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setImperfection(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setImperfection((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setTau(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setTau((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setColor(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(libsumo::TraCIColor **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::setColor((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setMinGapLat(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setMinGapLat((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setMaxSpeedLat(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setMaxSpeedLat((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setLateralAlignment(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Vehicle::setLateralAlignment((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1setActionStepLength(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jboolean jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  bool arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      libsumo::Vehicle::setActionStepLength((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Vehicle::subscribe((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Vehicle::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Vehicle::getAllSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< int,std::shared_ptr< libsumo::TraCIResult > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Vehicle::getAllContextSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Vehicle::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1storeShape(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  PositionVector *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(PositionVector **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "PositionVector & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Vehicle::storeShape((std::string const &)*arg1,*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1makeWrapper(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::shared_ptr< libsumo::VariableWrapper > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Vehicle::makeWrapper();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::VariableWrapper > **)&jresult = new std::shared_ptr< libsumo::VariableWrapper >((const std::shared_ptr< libsumo::VariableWrapper > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Vehicle_1handleVariable(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::VariableWrapper *arg3 = (libsumo::VariableWrapper *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = *(libsumo::VariableWrapper **)&jarg3; 
  {
    try {
      result = (bool)libsumo::Vehicle::handleVariable((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Vehicle(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Vehicle *arg1 = (libsumo::Vehicle *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Vehicle **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getIDList(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Person::getIDList();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getIDCount(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (int)libsumo::Person::getIDCount();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getSpeed((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getPosition_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jboolean jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  bool arg2 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = jarg2 ? true : false; 
  {
    try {
      result = libsumo::Person::getPosition((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getPosition_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getPosition((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIPosition **)&jresult = new libsumo::TraCIPosition((const libsumo::TraCIPosition &)result); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getRoadID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getRoadID((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getTypeID(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getTypeID((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getWaitingTime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getWaitingTime((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getNextEdge(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getNextEdge((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getVehicle(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getVehicle((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getRemainingStages(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Person::getRemainingStages((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getStage_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      result = (int)libsumo::Person::getStage((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getStage_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  std::string *arg1 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (int)libsumo::Person::getStage((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getEdges_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Person::getEdges((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getEdges_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getEdges((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::vector< std::string > **)&jresult = new std::vector< std::string >((const std::vector< std::string > &)result); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = libsumo::Person::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getAngle(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getAngle((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getLanePosition(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getLanePosition((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getLength((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getMaxSpeed((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getActionStepLength(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getActionStepLength((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getSpeedFactor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getSpeedFactor((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getSpeedDeviation(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getSpeedDeviation((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getAccel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getAccel((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getDecel((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getEmergencyDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getEmergencyDecel((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getApparentDecel(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getApparentDecel((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getImperfection(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getImperfection((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getTau(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getTau((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getVehicleClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getVehicleClass((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getEmissionClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getEmissionClass((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getShapeClass(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getShapeClass((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getMinGap(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getMinGap((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getWidth(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getWidth((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getHeight(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getHeight((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getColor(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  libsumo::TraCIColor result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getColor((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIColor **)&jresult = new libsumo::TraCIColor((const libsumo::TraCIColor &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getMinGapLat(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getMinGapLat((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getMaxSpeedLat(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  std::string *arg1 = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (double)libsumo::Person::getMaxSpeedLat((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getLateralAlignment(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  std::string *arg1 = 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getLateralAlignment((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1add_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4, jstring jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  std::string arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  if(!jarg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg5_pstr = (const char *)jenv->GetStringUTFChars(jarg5, 0); 
  if (!arg5_pstr) return ;
  (&arg5)->assign(arg5_pstr);
  jenv->ReleaseStringUTFChars(jarg5, arg5_pstr); 
  {
    try {
      libsumo::Person::add((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1add_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Person::add((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1add_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::add((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendWaitingStage_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jstring jarg3, jstring jarg4) {
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  {
    try {
      libsumo::Person::appendWaitingStage((std::string const &)*arg1,arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendWaitingStage_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Person::appendWaitingStage((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendWaitingStage_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::appendWaitingStage((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendWalkingStage_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jdouble jarg5, jstring jarg6) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  std::string *arg6 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  if(!jarg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg6_pstr = (const char *)jenv->GetStringUTFChars(jarg6, 0); 
  if (!arg6_pstr) return ;
  std::string arg6_str(arg6_pstr);
  arg6 = &arg6_str;
  jenv->ReleaseStringUTFChars(jarg6, arg6_pstr); 
  {
    try {
      libsumo::Person::appendWalkingStage((std::string const &)*arg1,(std::vector< std::string > const &)*arg2,arg3,arg4,arg5,(std::string const &)*arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendWalkingStage_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Person::appendWalkingStage((std::string const &)*arg1,(std::vector< std::string > const &)*arg2,arg3,arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendWalkingStage_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Person::appendWalkingStage((std::string const &)*arg1,(std::vector< std::string > const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendWalkingStage_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::string > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::appendWalkingStage((std::string const &)*arg1,(std::vector< std::string > const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendDrivingStage_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3, jstring jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  {
    try {
      libsumo::Person::appendDrivingStage((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1appendDrivingStage_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Person::appendDrivingStage((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1removeStage(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Person::removeStage((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1rerouteTraveltime(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Person::rerouteTraveltime((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1moveTo(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::moveTo((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1moveToXY(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jdouble jarg3, jdouble jarg4, jdouble jarg5, jint jarg6) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      libsumo::Person::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setParameter(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jstring jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      libsumo::Person::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setSpeed((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setType(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Person::setType((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setLength(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setLength((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setMaxSpeed(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setMaxSpeed((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setVehicleClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Person::setVehicleClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setSpeedFactor(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setSpeedFactor((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setEmissionClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Person::setEmissionClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setShapeClass(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Person::setShapeClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setWidth(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setWidth((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setHeight(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setHeight((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setMinGap(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setMinGap((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setAccel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setAccel((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setDecel((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setEmergencyDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setEmergencyDecel((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setApparentDecel(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setApparentDecel((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setImperfection(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setImperfection((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setTau(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setTau((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setColor(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(libsumo::TraCIColor **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "libsumo::TraCIColor const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Person::setColor((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setMinGapLat(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setMinGapLat((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setMaxSpeedLat(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setMaxSpeedLat((std::string const &)*arg1,arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setLateralAlignment(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      libsumo::Person::setLateralAlignment((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1setActionStepLength(JNIEnv *jenv, jclass jcls, jstring jarg1, jdouble jarg2, jboolean jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  bool arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      libsumo::Person::setActionStepLength((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribe_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3, jdouble jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Person::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribe_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribe_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(std::vector< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Person::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribe_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  std::string *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      libsumo::Person::subscribe((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribeContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5, jdouble jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Person::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribeContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4, jdouble jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Person::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribeContext_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3, jlong jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(std::vector< int > **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< int > const & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Person::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1subscribeContext_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jdouble jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getAllSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Person::getAllSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< int,std::shared_ptr< libsumo::TraCIResult > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::TraCIResults **)&jresult = new libsumo::TraCIResults((const libsumo::TraCIResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getAllContextSubscriptionResults(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Person::getAllContextSubscriptionResults();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::ContextSubscriptionResults **)&jresult = new libsumo::ContextSubscriptionResults((const libsumo::ContextSubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1getContextSubscriptionResults(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  SwigValueWrapper< std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = libsumo::Person::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(libsumo::SubscriptionResults **)&jresult = new libsumo::SubscriptionResults((const libsumo::SubscriptionResults &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1storeShape(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  std::string *arg1 = 0 ;
  PositionVector *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return ;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(PositionVector **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "PositionVector & reference is null");
    return ;
  } 
  {
    try {
      libsumo::Person::storeShape((std::string const &)*arg1,*arg2);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1makeWrapper(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SwigValueWrapper< std::shared_ptr< libsumo::VariableWrapper > > result;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = libsumo::Person::makeWrapper();
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  *(std::shared_ptr< libsumo::VariableWrapper > **)&jresult = new std::shared_ptr< libsumo::VariableWrapper >((const std::shared_ptr< libsumo::VariableWrapper > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_Person_1handleVariable(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::VariableWrapper *arg3 = (libsumo::VariableWrapper *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = (int)jarg2; 
  arg3 = *(libsumo::VariableWrapper **)&jarg3; 
  {
    try {
      result = (bool)libsumo::Person::handleVariable((std::string const &)*arg1,arg2,arg3);
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return 0; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_delete_1Person(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  libsumo::Person *arg1 = (libsumo::Person *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(libsumo::Person **)&jarg1; 
  {
    try {
      delete arg1;
    } catch (libsumo::TraCIException &e) {
      const std::string s = std::string("Error: ") + e.what();
      
      
      
      
      {
        SWIG_JavaException(jenv, SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (std::runtime_error &e) {
      const std::string s = std::string("SUMO error: ") + e.what();
      {
        SWIG_JavaException(jenv, SWIG_RuntimeError, s.c_str()); return ; 
      };
    } catch (...) {
      {
        SWIG_JavaException(jenv, SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIPosition_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(libsumo::TraCIResult **)&baseptr = *(libsumo::TraCIPosition **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIRoadPosition_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(libsumo::TraCIResult **)&baseptr = *(libsumo::TraCIRoadPosition **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIColor_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(libsumo::TraCIResult **)&baseptr = *(libsumo::TraCIColor **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIInt_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(libsumo::TraCIResult **)&baseptr = *(libsumo::TraCIInt **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIDouble_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(libsumo::TraCIResult **)&baseptr = *(libsumo::TraCIDouble **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIString_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(libsumo::TraCIResult **)&baseptr = *(libsumo::TraCIString **)&jarg1;
    return baseptr;
}

SWIGEXPORT jlong JNICALL Java_org_eclipse_sumo_libsumo_libsumoJNI_TraCIStringList_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(libsumo::TraCIResult **)&baseptr = *(libsumo::TraCIStringList **)&jarg1;
    return baseptr;
}

#ifdef __cplusplus
}
#endif

